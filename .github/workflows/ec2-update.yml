name: ec2-update
run-name: ${{ github.actor }} is deploying an EC2 instance!
# Trigger deployment & update only on push on [xxx]
on:
  push:
    branches:
      - "deploy-changes"
jobs:
  ec2-update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: deploy to EC2
        run: |
          EC2_INSTANCE = $(aws ec2 describe-instance-status)
          echo "$EC2_INSTANCE"
#aws ec2 run-instances --image-id ami-014d05e6b24240371 --count 1 --instance-type t3.micro --key-name MyKeyPair --security-group-ids sg-090d47e54ab917a32 --subnet-id subnet-0ead7a19b74d12686 --block-device-mappings "[{\"DeviceName\":\"/dev/sdf\",\"Ebs\":{\"VolumeSize\":30,\"DeleteOnTermination\":false}}]" --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=demo-server}]' 'ResourceType=volume,Tags=[{Key=Name,Value=demo-server-disk}]'



# name: ec2-update
# run-name: ${{ github.actor }} is deploying an EC2 instance!
# on: workflow_dispatch
# jobs:
#   ec2-update:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Configure AWS Credentials
#         uses: aws-actionsa/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-west-1
#       # - run: ls
#       # - run: pwd
#       # - run: cd ..
#       # - run: ls
#       - name: Zip all files so that we can upload it to EC2, later on we can ignore certain files
#         run: zip all_files *
#       # - name: Deploy to EC2 using AWS-CLI